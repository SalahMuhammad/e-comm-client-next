import { Geist, Geist_Mono } from "next/font/google";
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';
import "./globals.css";
import 'flowbite'
import { getServerCookie } from "@/utils/serverCookieHandelr";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: {
    template: "%s | MedPro Corp",
  },
  description: "Generated by create next app",
  icons: {
    icon: '/assets/logo/fav2.svg',
  },
};


export default async function RootLayout({ children, params }) {
  const theme = await getServerCookie('theme') || 'light'
  const { locale } = await params;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  let themeClass = ""
  if (theme == "auto") {
    let PreferredTheme = await getServerCookie("lastPreferredTheme");
    if (PreferredTheme == "dark") {
      themeClass = "dark"
    }
  } else if(theme == "dark") {
    themeClass = "dark"
  }
  return (
    <html 
      lang={locale}
      className={`${themeClass}`}
    >
      <head>
        {/* <script type="module" src="/theme-init.js" /> */}
      </head>
      <body
      // ${geistSans.variable} ${geistMono.variable}
        className={`antialiased`}
      >
        <NextIntlClientProvider>
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
